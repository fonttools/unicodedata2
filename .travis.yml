env:
  global:
    # directory containing the project source
    - REPO_DIR=.
    # pip dependencies to _build_ project
    - BUILD_DEPENDS=
    # pip dependencies to _test_ project
    - TEST_DEPENDS=
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    - TWINE_USERNAME="anthrotype"
    - secure: fzb2opRX/TNT3yRe/n5J7jlctyvrxpHNdh0/RdOuJxp+Oj0EgtxASgc4vv0FHetzrqP7oCiyxOXlq0TqEnpNq934SJ+VHSDcD9EUXe8qhwN+NGEx6ukk24HP6eA50We20797ukUGhX+ZUoOosl4Ws9RU20PNHbdfANW0RnnlG80=

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - BUILD_SDIST=true
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7

before_install:
  - source multibuild/common_utils.sh
  - source multibuild/travis_steps.sh
  - before_install

install:
  - build_wheel $REPO_DIR $PLAT

script:
  - install_run $PLAT

after_success:
  # if tagged commit, upload distribution to PyPI
  - |
    if [ -n "$TRAVIS_TAG" ] && [ "$TRAVIS_REPO_SLUG" == "mikekap/unicodedata2" ]; then
      pip install --upgrade twine
      cd "${TRAVIS_BUILD_DIR}"
      twine upload wheelhouse/*.whl
      if [ "$BUILD_SDIST" == true ]; then
        pip install --upgrade setuptools
        python setup.py --quiet sdist --dist-dir dist
        twine upload dist/*.tar.gz
      fi
    fi