environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C %APPVEYOR_BUILD_FOLDER%\\multibuild\\ci\\appveyor\\windows_sdk.cmd"

  matrix:

    - PYTHON: "C:\\Python26"
      PYTHON_VERSION: "2.6.6"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python26-x64"
      PYTHON_VERSION: "2.6.6"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python33"
      PYTHON_VERSION: "3.3.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

matrix:
  fast_finish: true

install:
  # Fetch submodules
  - git submodule update --init --recursive

  # Prepend Python to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Upgrade setuptools, wheel and virtualenv
  - "pip install --upgrade setuptools wheel virtualenv"

  # Create new virtual environment and activate it
  - "python -m virtualenv venv"
  - "venv\\Scripts\\activate"
  - "python -c \"import sys; print(sys.executable)\""

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  - "%CMD_IN_ENV% python setup.py test"

after_test:
  # If tests are successful, create a whl package for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*.whl

deploy:
  # Deploy wheels on tags to GitHub Releases
  - provider: GitHub
    auth_token:
      secure: xUMk47syMYcTfNy6sm5agNGSnUeUeMWgTvwhnTupLV27MNAtqoF77bmBOhATv2PZ
    draft: false
    prerelease: false
    on:
      appveyor_repo_tag: true
